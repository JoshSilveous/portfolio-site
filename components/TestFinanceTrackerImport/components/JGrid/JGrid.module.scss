// shorthand border properties don't work with cascaded inheritance (for color, specifically so that users can control border-color with their class or JSX style tag. It looks ugly, but it's the only way to inherit border-color properly.
.container {
	display: flex;
	width: 100%;
	justify-content: flex-start;
	border-radius: inherit;

	* {
		min-width: 0;
	}

	.grid {
		display: grid;
		grid-auto-rows: auto;
		align-self: flex-start;
		border-color: inherit;
		border-width: 1px;
		border-style: solid;
		border-right-width: 0px;
		border-bottom-width: 0px;

		.row {
			display: contents;
			border-color: inherit;

			.cell {
				box-sizing: border-box;
				display: flex;
				align-items: flex-start;
				white-space: nowrap;
				text-overflow: ellipsis;
				overflow: hidden;
				width: 100%;
				height: auto;

				&.header {
					&.sticky {
						position: sticky;
						top: 0;
						z-index: 5;
					}
					user-select: none;
					font-weight: 700;
					grid-row: 1 / 2;
					justify-content: center;
				}
				border-right-width: 1px;
				border-right-color: inherit;
				border-right-style: solid;
				border-bottom-width: 1px;
				border-bottom-color: inherit;
				border-bottom-style: solid;
			}
		}
		.measurer {
			z-index: 5;
			grid-row: 1 / 2;
			display: flex;
			justify-content: flex-end;
			pointer-events: none;
			border-color: inherit;
			&.sticky {
				position: sticky;
				top: 0;
			}

			.grabber {
				pointer-events: all;
				width: 12px;
				height: 100%;
				position: relative;
				overflow: hidden;
				cursor: e-resize;
				border-color: inherit;

				&::before {
					content: '';
					position: absolute;
					top: 0;
					right: 0;
					bottom: 0;
					left: 100%;
					border-left-color: inherit;
					border-left-width: 12px;
					border-left-style: solid;
					transition: left 0.2s;
				}
				&:hover::before,
				&.resizing::before {
					left: 8px;
				}
			}
		}

		&.no_borders {
			border-width: 0px;
			border-color: transparent;
			.cell {
				border-right-width: 0px;
				border-bottom-width: 0px;
				border-color: transparent;
				border: none;
				background-color: transparent;
			}
		}
	}
}
